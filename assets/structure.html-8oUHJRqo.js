import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,o as a,d as n}from"./app-C-HbIo8n.js";const s={},t=n('<h1 id="code-structure" tabindex="-1"><a class="header-anchor" href="#code-structure"><span>Code Structure</span></a></h1><h2 id="main-rs" tabindex="-1"><a class="header-anchor" href="#main-rs"><span><code>main.rs</code></span></a></h2><p>The entry point of the application. It handles command-line arguments, initializes logging, sets up the server, and listens for incoming TCP connections.</p><h2 id="db-manager-rs" tabindex="-1"><a class="header-anchor" href="#db-manager-rs"><span><code>db_manager.rs</code></span></a></h2><p>Contains the <code>RocksDBManager</code> struct, which encapsulates the functionality for interacting with the RocksDB instance. It provides methods for performing CRUD operations, batch operations, transaction management, backup and restore, and more.</p><h2 id="server-rs" tabindex="-1"><a class="header-anchor" href="#server-rs"><span><code>server.rs</code></span></a></h2><p>Defines the <code>RocksDBServer</code> struct, which manages the server&#39;s state and handles client requests. It includes methods for processing different types of requests (e.g., <code>put</code>, <code>get</code>, <code>delete</code>, <code>merge</code>) and responding to clients.</p><h2 id="helpers-rs" tabindex="-1"><a class="header-anchor" href="#helpers-rs"><span><code>helpers.rs</code></span></a></h2><p>Provides utility functions and types, such as logging levels and lock file management.</p><h2 id="cache-rs" tabindex="-1"><a class="header-anchor" href="#cache-rs"><span><code>cache.rs</code></span></a></h2><p>The <code>cache</code> module provides in-memory caching capabilities to improve read performance and reduce the load on RocksDB. It includes logic for managing cache entries, performing cleanup, and synchronizing with the database.</p><h2 id="queue-rs" tabindex="-1"><a class="header-anchor" href="#queue-rs"><span><code>queue.rs</code></span></a></h2><p>The <code>queue</code> module implements a task queue for handling asynchronous write operations to RocksDB. This ensures that write operations are performed in a non-blocking manner, improving the overall performance of the server.</p>',13),o=[t];function c(i,d){return a(),r("div",null,o)}const p=e(s,[["render",c],["__file","structure.html.vue"]]),u=JSON.parse('{"path":"/server/structure.html","title":"Code Structure","lang":"en-US","frontmatter":{"lang":"en-US","sticky":10,"icon":"fas fa-code-branch","star":true,"dir":null,"order":4,"category":["SERVER"]},"headers":[{"level":2,"title":"main.rs","slug":"main-rs","link":"#main-rs","children":[]},{"level":2,"title":"db_manager.rs","slug":"db-manager-rs","link":"#db-manager-rs","children":[]},{"level":2,"title":"server.rs","slug":"server-rs","link":"#server-rs","children":[]},{"level":2,"title":"helpers.rs","slug":"helpers-rs","link":"#helpers-rs","children":[]},{"level":2,"title":"cache.rs","slug":"cache-rs","link":"#cache-rs","children":[]},{"level":2,"title":"queue.rs","slug":"queue-rs","link":"#queue-rs","children":[]}],"git":{"createdTime":1720083201000,"updatedTime":1720083201000,"contributors":[{"name":"Pavel Kuzmin","email":"Virus191288@gmail.com","commits":1}]},"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"server/structure.md","localizedDate":"July 4, 2024","excerpt":"\\n<h2><code>main.rs</code></h2>\\n<p>The entry point of the application. It handles command-line arguments, initializes logging, sets up the server, and listens for incoming TCP connections.</p>\\n<h2><code>db_manager.rs</code></h2>\\n<p>Contains the <code>RocksDBManager</code> struct, which encapsulates the functionality for interacting with the RocksDB instance. It provides methods for performing CRUD operations, batch operations, transaction management, backup and restore, and more.</p>"}');export{p as comp,u as data};
